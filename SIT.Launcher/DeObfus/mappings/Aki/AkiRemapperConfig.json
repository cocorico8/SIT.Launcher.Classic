{
  // Enable/Disable the Automatic System of Remapping via Code
  "EnableAutomaticRemapping": false,
  // Enable/Disable the Defined Mapping list of Remapping - The defined list runs after the Automatic Remap
  "EnableDefinedRemapping": true,
  "DefinedRemapping": [
    // ------------------------------------------------------------------------------------------
    // SPT-Aki Remapping List
    {
      "RenameClassNameTo": "BattleeyePatchClass",
      "HasMethods": [ "RunValidation" ]
    },
    {
      "RenameClassNameTo": "BotMemoryClass",
      "HasMethods": [ "LoseVisionCurrentEnemy", "ComeToPoint", "AddEnemy" ]
    },
    {
      "RenameClassNameTo": "WaveInfo",
      "HasFields": [ "Role", "Limit", "Difficulty" ]
    },
    {
      "RenameClassNameTo": "ItemFactory",
      "OnlyRemapFirstFoundType": true,
      "HasMethods": [ "CreateItem", "CreateFakeStash" ]
    },
    {
      "RenameClassNameTo": "PoolManager",
      "HasMethods": [ "LoadBundlesAndCreatePools" ]
    },
    {
      "RenameClassNameTo": "MainMenuController",
      "HasFields": [ "HealthController", "InventoryController", "GroupId", "MatchingType", "IsInSession" ],
      "HasMethods": [ "OnProfileChangeApplied", "ShowScreen", "StopAfkMonitor", "StoreProfile", "Unsubscribe" ]
    },
    {
      "RenameClassNameTo": "NotificationClass",
      "HasFields": [ "ShowNotification", "Icon" ]
    },
    {
      "RenameClassNameTo": "NotificationManagerClass",
      "HasFields": [ "ProfileChangeNotifications", "Notifications" ]
    },
    {
      "RenameClassNameTo": "WeatherClass",
      "HasMethods": [ "GetWeatherTypeByNode" ]
    },
    {
      "RenameClassNameTo": "SynchronizableObjectLogicProcessorClass",
      "HasMethods": [ "GetSyncObjectStrategyByType" ]
    },
    {
      "RenameClassNameTo": "AirdropManagerAbstractClass",
      "HasMethods": [ "TakeAirdropPoint" ]
    },
    // These two Airdrop classes are VERY similar
    // Airdrops: Run this first
    {
      "RenameClassNameTo": "AirplaneLogicClass",
      "OnlyRemapFirstFoundType": true,
      "IsClass": true,
      "HasFields": [ "bool_0", "float_0", "float_11", "synchronizableObjectType_0" ],
      "HasMethods": [ "CollisionEnter", "Init", "InitStaticObject", "SetSyncObject", "ManualUpdate", "UpdateSyncObjectData", "TakeFromPool", "ReturnToPool", "method_2" ]
    },
    // Airdrops: Run this second
    {
      "RenameClassNameTo": "AirdropLogicClass",
      "OnlyRemapFirstFoundType": true,
      "IsClass": true,
      "HasFields": [ "airdropSynchronizableObject_0", "airdropSurfaceSet_0" ],
      "HasMethods": [ "CollisionEnter", "Init", "InitStaticObject", "SetSyncObject", "ManualUpdate", "UpdateSyncObjectData", "TakeFromPool", "ReturnToPool", "method_6" ]
    },
    {
      "RenameClassNameTo": "QuestControllerClass",
      "OnlyRemapFirstFoundType": true,
      "IsClass": true,
      "HasFields": [],
      "HasMethods": [ "GetItemsForCondition", "AcceptQuest", "CheckExitConditionCounters" ]
    },
    {
      "RenameClassNameTo": "MagazineClass",
      "HasFields": [],
      "HasMethods": [ "GetAmmoCountByLevel" ],
      "HasMethodsVirtual": [ "FirstRealAmmo" ]
    },
    {
      "RenameClassNameTo": "BulletClass",
      "HasFields": [ "MinFragmentsCount", "MaxFragmentsCount", "ammoShiftChance", "ProjectileCount", "InitialSpeed" ],
      "HasMethods": [ "Clone" ]
    },
    {
      "RenameClassNameTo": "JobPriority",
      "HasFields": [ "General", "Low", "Immediate" ],
      "HasMethodsStatic": [ "GetYieldDelegate" ]
    },
    {
      "RenameClassNameTo": "BundleLock",
      "HasFields": [ "MaxConcurrentOperations", "IsLocked" ],
      "HasMethods": [ "Lock", "Unlock" ]
    },
    {
      "RenameClassNameTo": "DependencyGraph",
      "HasMethods": [ "Retain", "RetainSeparate", "GetDefaultNode" ]
    },
    {
      "RenameClassNameTo": "BotBrainClass",
      "HasFields": [ "BaseBrain", "Agent", "LastDecision" ],
      "HasMethods": [ "Activate" ]
    },
    {
      "RenameClassNameTo": "BotSettingsClass",
      "HasFields": [ "IsLastPositionChecked", "LastChangeVisionTime" ],
      "HasMethods": [ "GetPositionForSearch", "SetSuppressEndTime", "IsSuppressed" ]
    },
    {
      "RenameClassNameTo": "BotsPresets",
      "HasFields": [ "BundlesLoading" ],
      "HasMethods": [ "GetNewProfile", "CreateProfile" ]
    },
    {
      "RenameClassNameTo": "IConnectionHandler",
      "IsInterface": true,
      "HasMethods": [ "SetUri", "SetUriParam", "SetRequestHeader", "Open" ]
    },
    {
      "RenameClassNameTo": "IBotData",
      "IsInterface": true,
      "HasMethods": [ "PrepareToLoadBackend", "ChooseProfile" ]
    },
    {
      "RenameClassNameTo": "IEffect",
      "IsInterface": true,
      "HasFields": [ "Type", "BodyPart", "State", "CurStateTimeLeft", "WorkStateTime", "Strength" ]
    },
    {
      "RenameClassNameTo": "ISpawnPoints",
      "IsInterface": true,
      "HasMethods": [ "CreateSpawnPoint", "DestroySpawnPoint" ]
    },
    {
      "RenameClassNameTo": "ISpawnSystem",
      "IsInterface": true,
      "HasMethods": [ "SelectSpawnPoint", "SelectPlayerSavageSpawn", "SelectAISpawnPoints" ]
    },
    {
      "RenameClassNameTo": "EasyBundle",
      "HasFields": [ "DependencyKeys", "Assets", "SameNameAsset", "Progress", "LoadState" ],
      "HasMethods": [ "Load", "Unload" ]
    },
    {
      "RenameClassNameTo": "IEasyBundle",
      "IsInterface": true,
      "HasFields": [ "Assets", "SameNameAsset" ]
    },
    {
      "RenameClassNameTo": "ABindableState",
      "IsClass": true,
      "HasFields": [ "HasHandlers", "HasCheckChanges", "Handlers", "Value" ],
      "HasMethods": [ "Bind", "BindWithoutValue", "Subscribe", "Unbind" ]
    },
    {
      "RenameClassNameTo": "BindableState",
      "IsClass": true,
      "OnlyRemapFirstFoundType": true,
      "InheritsClass": "ABindableState",
      "HasConstructorArgs": [ "initialValue", "equalityComparer" ]
    },
    {
      "RenameClassNameTo": "IBundleLock",
      "IsInterface": true,
      "HasFields": [ "IsLocked" ],
      "HasMethods": [ "Lock", "Unlock" ]
    },
    {
      "RenameClassNameTo": "IAIDetails",
      "IsInterface": true,
      "HasFields": [ "Side", "GroupId", "TeamId", "LookDirection", "Position", "WeaponRoot", "HealthController", "AIData" ]
    },
    {
      "RenameClassNameTo": "DamageInfo",
      "HasFields": [ "DamageType", "Damage", "PenetrationPower", "HitNormal" ]
    },
    {
      "RenameClassNameTo": "BotSettingsRepoClass",
      "HasMethodsStatic": [ "CountAsBoss", "GetPhraseTagFromRole", "GetScavRoleKey", "IsBoss" ]
    },
    {
      "RenameClassNameTo": "BotSettingsValuesClass",
      "HasFields": [ "IsBoss", "IsFollower", "IsHostileToEverybody", "CountAsBoss", "ScavRoleKey", "PhraseTag" ]

    },
    {
      "RenameClassNameTo": "IBotController",
      "IsInterface": true,
      "HasFields": [ "Position", "GoalEnemy", "Settings", "BossToFollow", "Covers", "Id", "IsDamaged", "Brain" ]
    },
    {
      "RenameClassNameTo": "ISession",
      "IsInterface": true,
      "HasFields": [],
      "HasEvents": [ "InventoryErrorHappened", "InventoryWarningHappened" ],
      "HasMethods": [ "GetProfiles", "SetMainProfile", "RagfairAddOffer", "RagfairRemoveOffer", "RagfairRenewOffer", "RagfairPurchaseOffers", "RagfairGetPrices" ],
      "OnlyRemapFirstFoundType": true
    },
    {
      "RenameClassNameTo": "LayerMaskClass",
      "HasFields": [ "HighPolyWithTerrainMask", "DisablerCullingObjectLayerMask", "AudioControllerStepLayerMask", "TriggersMask" ]
    },
    {
      "RenameClassNameTo": "RecodableItemClass",
      "HasMethods": [ "InitializeHandler", "IsEncoded", "IsInitializedHandler", "OnAddRecodableItem", "OnRemoveRecodableItem" ]
    },
    {
      "RenameClassNameTo": "RadioTransmitterHandlerClass",
      "HasMethods": [ "OnGetRadioTransmitterStatusFromClient", "OnPlayerAddRecodableHandler", "OnPlayerRemoveRecodableHandler" ]
    },
    {
      "RenameClassNameTo": "ExfiltrationControllerClass",
      "HasMethods": [ "AssignScavIdToPoint", "GetScavExfiltrationMask", "InitAllExfiltrationPoints", "ScavExfiltrationClaim" ]
    },
    {
      "RenameClassNameTo": "AICoreAgentClass",
      "InheritsClass": "AbstractAiCoreAgentM",
      "HasConstructorArgs": [ "aiCoreController", "strategy", "nodesDictionary", "monoBehObject", "name", "lazyGetter" ]

    },
    {
      "RenameClassNameTo": "AICoreLayerClass",
      "HasEvents": [ "OnEndCurDecision", "OnStartCurDecision" ],
      "HasMethods": [ "GetDecision", "ShallEndCurrentDecision", "ShallUseNow", "GetCustomData" ],
      "HasFields": [ "Priority" ],
      "IsAbstract": true
    },
    {
      "RenameClassNameTo": "BaseLogicLayerSimpleClass",
      "HasMethods": [ "FindPoint", "InFightLogic", "EndRunAwayGrenade", "EndSimplePatrol" ],
      "HasMethodsStatic": [ "TryMoveToEnemy", "CheckMedsToStop", "IsPointInsideDangerZone" ],
      "HasConstructorArgs": [ "bot", "priority" ]

    },
    {
      "RenameClassNameTo": "BaseLogicLayerClass",
      "OnlyRemapFirstFoundType": true,
      "HasMethodsStatic": [ "HoldOrCover", "HoldOrCoverRun" ],
      "HasMethods": [ "ShallEndCurrentDecision", "EndGoToPoint" ],
      "HasConstructorArgs": [ "bot", "priority" ]

    },
    {
      "RenameClassNameTo": "BaseNodeClass",
      "MustBeGClass": true,
      "IsAbstract": true,
      "HasFields": [ "botOwner_0" ],
      "OnlyRemapFirstFoundType": true
    },
    {
      "RenameClassNameTo": "AICoreStrategyClass",
      "IsAbstract": true,
      "HasEvents": [ "OnLayerChangedTo" ],
      "HasMethods": [ "IsLayerActive", "HaveLayer", "Activate" ]
    },
    {
      "RenameClassNameTo": "AICoreActionEndStruct",
      "IsStruct": true,
      "HasFields": [ "Value", "Reason" ],
      "HasConstructorArgs": [ "reason", "val" ]

    },
    {
      "RenameClassNameTo": "AICoreActionResultStruct",
      "IsStruct": true,
      "HasConstructorArgs": [ "action", "reason" ],
      "HasFields": [ "Action", "Reason" ]

    },
    {
      "RenameClassNameTo": "LootItemPositionClass",
      // This name comes from my Auto Remapper (and makes sense). I don't know why Aki chose the name LootItemPositionClass instead?!
      "ClassName": "JsonLootItem",
      "OnlyRemapFirstFoundType": true
    }

  ],
  "DefinedTypesToForcePublic": [
  ],
  "TypesToForceAllPublicMethods": [
  ],
  "TypesToForceAllPublicFieldsAndProperties": [
  ],
  //"EnableAddSPTUsecBearToDll": false,
  "EnumAdditions": [
    {
      "type": "EFT.WildSpawnType",
      "eValue": "sptUsec",
      "iValue": 47
    },
    {
      "type": "EFT.WildSpawnType",
      "eValue": "sptBear",
      "iValue": 48
    }
  ]
}
